{"ast":null,"code":"var _jsxFileName = \"/Users/kimdo/Documents/Projects/mini-browser/client/src/components/displayList/LinkList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n//import { useSelector, useDispatch } from \"react-redux\";\n//import DATA from \"../fetchData/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PathObject = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.link\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.score\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 5\n}, this);\n_c = PathObject;\nexport default function LinkList() {\n  _s();\n  const [records, setRecords] = useState([]);\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:3000/record/`);\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      let records = await response.json();\n      //add sample to records\n      records = records.concat({\n        title: \"sample\",\n        link: \"sample\",\n        score: \"sample\"\n      });\n      setRecords(records);\n    }\n    getRecords();\n    return;\n  }, [records.length]);\n\n  /* Must Add Middleware to use this\n  const { linksData, isLoading } = useSelector((state) => state);\n  const dispatch = useDispatch();\n   useEffect(() => {\n      dispatch(requestLinks());\n  }, []);\n   async function requestLinks() {\n      dispatch({\n          type: DATA.LOAD,\n      });\n      try {\n          const json = await fetch(`http://localhost:3000/record/`);\n          console.log(json);\n          dispatch({\n              type: DATA.LOAD_SUCCESS,\n              linksData: json.data,\n              isError: false,\n          });\n      } catch (e) {\n          dispatch({\n              type: DATA.LOAD_SUCCESS,\n              linksData: [],\n              isError: true,\n          });\n      }\n  }\n   */\n  function showList() {\n    console.log(records);\n    return records.map(link => {\n      return /*#__PURE__*/_jsxDEV(PathObject, {\n        title: link.title,\n        link: link.link,\n        score: link.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"list-links\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: showList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(LinkList, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c2 = LinkList;\nvar _c, _c2;\n$RefreshReg$(_c, \"PathObject\");\n$RefreshReg$(_c2, \"LinkList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PathObject","props","children","title","fileName","_jsxFileName","lineNumber","columnNumber","link","score","_c","LinkList","_s","records","setRecords","getRecords","response","fetch","ok","message","statusText","window","alert","json","concat","length","showList","console","log","map","className","_c2","$RefreshReg$"],"sources":["/Users/kimdo/Documents/Projects/mini-browser/client/src/components/displayList/LinkList.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n//import { useSelector, useDispatch } from \"react-redux\";\n//import DATA from \"../fetchData/constants\";\n\nconst PathObject = (props) => (\n    <tr>\n        <td>{props.title}</td>\n        <td>{props.link}</td>\n        <td>{props.score}</td>\n    </tr>\n);\nexport default function LinkList() {\n    const [records, setRecords] = useState([]);\n    // This method fetches the records from the database.\n    useEffect(() => {\n    async function getRecords() {\n        const response = await fetch(`http://localhost:3000/record/`);\n        if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n        }\n        let records = await response.json();\n        //add sample to records\n        records = records.concat({\n        title: \"sample\",\n        link: \"sample\",\n        score: \"sample\",\n        });\n        \n        setRecords(records);\n    }\n        getRecords();\n        return;\n    }, [records.length]);\n    \n    \n\n    /* Must Add Middleware to use this\n    const { linksData, isLoading } = useSelector((state) => state);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(requestLinks());\n    }, []);\n\n    async function requestLinks() {\n        dispatch({\n            type: DATA.LOAD,\n        });\n        try {\n            const json = await fetch(`http://localhost:3000/record/`);\n            console.log(json);\n            dispatch({\n                type: DATA.LOAD_SUCCESS,\n                linksData: json.data,\n                isError: false,\n            });\n        } catch (e) {\n            dispatch({\n                type: DATA.LOAD_SUCCESS,\n                linksData: [],\n                isError: true,\n            });\n        }\n    }\n\n    */\n    function showList() {\n        console.log(records);\n        return records.map((link) => {\n            return(\n                <PathObject title={link.title} link={link.link} score={link.score} />\n            )\n        }\n        );\n    }\n    \n\n    return (\n        <table className=\"list-links\">\n            <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Link</th>\n                    <th>Score</th>\n                </tr>\n            </thead>\n            <tbody>{showList()}</tbody>\n        </table>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}